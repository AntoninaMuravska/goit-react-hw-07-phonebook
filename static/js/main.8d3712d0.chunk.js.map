{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/redux/contacts/contacts-actions.js","components/redux/contacts/contacts-reducer.js","components/redux/store.js","components/Container/Container.js","components/redux/contacts/contacts-operations.js","components/redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","devTools","process","Container","children","className","s","container","axios","defaults","baseURL","dispatch","get","then","data","catch","error","name","number","contact","post","contactId","delete","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","connect","onDeleteContact","contactOperations","list","map","item","type","button","onClick","Filter","label","span","input","value","onChange","e","target","protoType","PropTypes","string","func","ContactForm","nameInputId","uuidv4","numberInputId","handleInputChange","currentTarget","setState","handleSubmit","preventDefault","newContact","props","resetForm","find","el","alert","onSubmit","form","this","htmlFor","pattern","title","required","btnSubmit","Component","operations","Contacts","App","fetchContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d3712d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3-BIg\",\"input\":\"Filter_input__jSU9a\",\"span\":\"Filter_span__21fss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Xo_k\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contact/addContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const deleteContactError = createAction('contacts/addContactError');\r\n\r\nexport const changeFilter = createAction('contacts/FILTER');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactError]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\n// import {\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from 'redux-persist';\r\n// import logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => {\r\n  return state.contacts.items;\r\n};\r\n\r\nexport const getFilter = state => {\r\n  return state.contacts.filter;\r\n};\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactOperations from '../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../redux/contacts/contacts-selectors';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.item}>\n        <p className={s.name}>{name}</p>\n        <p className={s.number}>{number}</p>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDelete: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getFilter } from '../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../redux/contacts/contacts-actions';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <label className={s.label}>\n      <span className={s.span}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        className={s.input}\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport operations from '../redux/contacts/contacts-operations';\nimport { getContacts } from '../redux/contacts/contacts-selectors';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleInputChange = e => {\n    // console.log(e.currentTarget.value);\n    // console.log(e.currentTarget.name);\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n    // console.log(this.state);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { contacts } = this.props;\n    const { name, number } = this.state;\n    let newContact;\n\n    this.resetForm();\n\n    if (contacts.find(el => el.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      newContact = {\n        name: name,\n        number: number,\n      };\n    }\n    return this.props.onSubmit(newContact);\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label} htmlFor={this.nameInputId}>\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            className={s.input}\n            required\n          />\n\n          <label className={s.label} htmlFor={this.numberInputId}>\n            Number\n          </label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberInputId}\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            className={s.input}\n            required\n          />\n\n          <button type=\"submit\" className={s.btnSubmit}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(operations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\nimport ContactForm from '../ContactForm';\r\n\r\nfunction Contacts() {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\nexport default Contacts;\r\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport Contacts from './components/Contacts';\nimport contactOperations from './components/redux/contacts/contacts-operations';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Contacts />\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactOperations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store';\nimport './index.css';\nimport App from './App';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__21qps\",\"label\":\"ContactForm_label__15o2t\",\"input\":\"ContactForm_input__2V17c\",\"btnSubmit\":\"ContactForm_btnSubmit__6Ewf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2OX2i\",\"item\":\"ContactList_item__3FLAD\",\"name\":\"ContactList_name__1BJ-C\",\"number\":\"ContactList_number__1sARL\",\"button\":\"ContactList_button__HSoBw\"};"],"sourceRoot":""}